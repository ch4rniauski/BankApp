// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ch4rniauski.BankApp.CreditCards.Infrastructure;

#nullable disable

namespace ch4rniauski.BankApp.CreditCards.Infrastructure.Migrations
{
    [DbContext(typeof(CreditCardsContext))]
    partial class CreditCardsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ch4rniauski.BankApp.CreditCards.Domain.Entities.CreditCardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CardHolderId")
                        .HasColumnType("uuid");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CvvHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("ExpirationMonth")
                        .HasColumnType("smallint");

                    b.Property<short>("ExpirationYear")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("PinCodeHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CreditCards", t =>
                        {
                            t.HasCheckConstraint("CK_CreditCards_Balance_Positive", "\"Balance\" >= 0");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
